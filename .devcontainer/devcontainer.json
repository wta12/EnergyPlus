// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.158.0/containers/docker-existing-dockerfile
{
	"name": "ep_dev_docker_VSCODE",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Docker/dockerFile",
	// "image": "energyplusdocker:latest",

	// Set *default* container specific settings.json values on container create.
	"settings": {
		// "terminal.integrated.shell.linux": null
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-python.python",
		"mhutchie.git-graph",
		"jeff-hykin.better-cpp-syntax",
		"ms-vscode.cpptools",
		"ms-vscode.cpptools-themes",
		"cschlosser.doxdocgen",
		"ms-vscode.cmake-tools",
		"twxs.cmake"
	],
	"containerEnv": {"HOST_PATH":"${localWorkspaceFolder}"},
	"workspaceMount": "source=${localWorkspaceFolder},target=/home/ngkhanh/ep_dev_docker,type=bind", // bind has worse pef but convenient - source folder already WSL VM based
	"workspaceFolder": "/home/ngkhanh/ep_dev_docker",
	// "onCreateCommand": "sudo chown -R ngkhanh ${containerWorkspaceFolder}", 
	"onCreateCommand": "${containerWorkspaceFolder}/Docker/postCreateCmd.sh",
	// "postAttachCommand": [
		// "git --help",
		// "sudo chown -R ngkhanh ${containerWorkspaceFolder}" // only need for volume mount with non root user
	// ],
	// "mounts": [
	// 	"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind,consistency=cached"


	// 	// "source=${localEnv:HOME}/.aws,target=/root/.aws,type=bind"
	// ]

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	"mounts": [ 
		// "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
		"source=vs_code_extensions,target=/home/ngkhanh/.vscode-server/extensions,type=volume" // source: docker volume create vs_code_extensions / dockerFile create target folder
	],

	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "ngkhanh",
	// "remoteUser": "vscode"
	
}
